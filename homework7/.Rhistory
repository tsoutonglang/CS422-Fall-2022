library(keras)
library(dplyr)
library(caret)
library(rpart)
library(rpart.plot)
rm(list=ls())
# Set working directory as needed
setwd("C:\\Users\\tsout\\OneDrive\\Desktop\\cs422\\CS422-labs\\homework7")
df <- read.csv("wifi_localization.csv", header=TRUE, comment="#")
# Seed the PRNG
set.seed(1122)
df <- df[sample(nrow(df)), ] # Shuffle, as all of the data in the .csv file
# is ordered by label!
View(df)
View(df)
library(keras)
library(dplyr)
library(caret)
library(rpart)
library(rpart.plot)
rm(list=ls())
# Set working directory as needed
setwd("C:\\Users\\tsout\\OneDrive\\Desktop\\cs422\\CS422-labs\\homework7")
df <- read.csv("wifi_localization.csv", header=TRUE, comment="#")
# Seed the PRNG
set.seed(1122)
df <- df[sample(nrow(df)), ] # Shuffle, as all of the data in the .csv file
# is ordered by label!
# Cleaning training data set
sum(train.df$occupation == "?")
setwd("C:\\Users\\tsout\\OneDrive\\Desktop\\cs422\\CS422-labs\\homework4")
library(rpart)
library(rpart.plot)
library(dplyr)
library(ROCR)
library(caret)
train.df <- read.csv("adult-train.csv", header=TRUE, comment="#")
test.df <- read.csv("adult-test.csv", header=TRUE, comment="#")
# Cleaning training data set
sum(train.df$occupation == "?")
trainClean <- which(train.df$occupation == "?")
train.df <- slice(train.df, -trainClean)
trainClean <- which(train.df$native_country == "?")
train.df <- slice(train.df, -trainClean)
sum(train.df$occupation == "?")
# cleaning testing data set
sum(test.df$occupation == "?")
testClean <- which(test.df$occupation == "?")
test.df <- slice(test.df, -testClean)
testClean <- which(test.df$native_country == "?")
test.df <- slice(test.df, -testClean)
sum(test.df$occupation == "?")
library(rpart.plot)
library(rpart)
library(rpart.plot)
data(iris)
head(iris)
model <- rpart(Species ~ ., data=iris, method="class")
summary(model)
setwd("C:\\Users\\tsout\\OneDrive\\Desktop\\cs422\\CS422-labs\\homework5")
library(arules)
# The first column is the transaction ID
# the subsequent columns contain a list of purchased goods from the bakery represented by their product ID code
products <- read.csv("products.csv", header=FALSE, comment="#")
tr1k.df <- read.csv("tr-1k.csv", header=FALSE, comment="#")
tr5k.df <- read.csv("tr-5k.csv", header=FALSE, comment="#")
tr20k.df <- read.csv("tr-20k.csv", header=FALSE, comment="#")
tr75k.df <- read.csv("tr-75k.csv", header=FALSE, comment="#")
install.packages("tensorflow")
library(reticulate)
setwd("C:\\Users\\tsout\\OneDrive\\Desktop\\cs422\\CS422-labs\\homework5")
library(arules)
# The first column is the transaction ID
# the subsequent columns contain a list of purchased goods from the bakery represented by their product ID code
products <- read.csv("products.csv", header=FALSE, comment="#")
tr1k.df <- read.csv("tr-1k.csv", header=FALSE, comment="#")
tr5k.df <- read.csv("tr-5k.csv", header=FALSE, comment="#")
tr20k.df <- read.csv("tr-20k.csv", header=FALSE, comment="#")
tr75k.df <- read.csv("tr-75k.csv", header=FALSE, comment="#")
# Split the data
indx <- sample(1:nrow(df), 0.20*nrow(df))
test.df  <- df[indx, ]
train.df <- df[-indx, ]
library(keras)
library(dplyr)
library(caret)
library(rpart)
library(rpart.plot)
rm(list=ls())
# Set working directory as needed
setwd("C:\\Users\\tsout\\OneDrive\\Desktop\\cs422\\CS422-labs\\homework7")
df <- read.csv("wifi_localization.csv", header=TRUE, comment="#")
# Seed the PRNG
set.seed(1122)
df <- df[sample(nrow(df)), ] # Shuffle, as all of the data in the .csv file
# is ordered by label!
# Split the data
indx <- sample(1:nrow(df), 0.20*nrow(df))
test.df  <- df[indx, ]
train.df <- df[-indx, ]
library(keras)
library(dplyr)
library(caret)
library(rpart)
library(rpart.plot)
rm(list=ls())
# Set working directory as needed
setwd("C:\\Users\\tsout\\OneDrive\\Desktop\\cs422\\CS422-labs\\homework7")
df <- read.csv("wifi_localization.csv", header=TRUE, comment="#")
# Seed the PRNG
set.seed(1122)
df <- df[sample(nrow(df)), ] # Shuffle, as all of the data in the .csv file
# is ordered by label!
# Split the data
indx <- sample(1:nrow(df), 0.20*nrow(df))
test.df  <- df[indx, ]
train.df <- df[-indx, ]
View(train.df)
View(train.df)
model <- rpart(income ~ ., data=train.df, method="class")
View(train.df)
View(train.df)
model <- rpart(room ~ ., data=train.df, method="class")
rpart.plot(model, extra=104, fallen.leaves=T, type=4, main="1994 U.S. Census")
# summary(model)
predictions <- predict(model,test.df,type="class")
confusionMatrix(predictions,as.factor(test.df$income))
confusionMatrix(predictions,as.factor(test.df$room))
model <- rpart(room ~ ., data=train.df, method="class")
rpart.plot(model, extra=104, fallen.leaves=T, type=4, main="1994 U.S. Census")
# summary(model)
predictions <- predict(model,test.df,type="class")
confusionMatrix(as.factor(test.df$room), predictions)
as.matrix(confusionMatrix(as.factor(test.df$room), predictions), what = "overall")
model <- rpart(room ~ ., data=train.df, method="class")
rpart.plot(model, extra=104, fallen.leaves=T, type=4, main="1994 U.S. Census")
# summary(model)
predictions <- predict(model,test.df,type="class")
confusionMatrix(as.factor(test.df$room), predictions)
library(keras)
library(dplyr)
library(caret)
library(tidyverse)
paste0("Decision Tree Model")
paste0("Overall Accuracy: ", signif(confusion.matrix[["overall"]][["Accuracy"]], 3))
confusion.matrix <- confusionMatrix(as.factor(test.df$room), predictions)
paste0("Decision Tree Model")
paste0("Overall Accuracy: ", signif(confusion.matrix[["overall"]][["Accuracy"]], 3))
paste0('Sensitivity ', signif(confusion.matrix[["byClass"]][1,1],
2), ", Specificity = ", signif(confusion.matrix[["byClass"]][1,2], 2), ", Balanced
Accuracy = ", signif(confusion.matrix[["byClass"]][1,11], 2))
paste0("Decision Tree Model")
paste0("Overall Accuracy: ", signif(confusion.matrix[["overall"]][["Accuracy"]], 2))
paste0('Sensitivity
Class 1: ', signif(confusion.matrix[["byClass"]][1,1], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,1], 2),
' Class 3: ', signif(confusion.matrix[["byClass"]][3,1], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,1], 2))
paste0('Sensitivity Class 1: ', signif(confusion.matrix[["byClass"]][1,1], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,1], 2),
' Class 3: ', signif(confusion.matrix[["byClass"]][3,1], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,1], 2))
cat(paste0('Sensitivity Class 1: ', signif(confusion.matrix[["byClass"]][1,1], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,1], 2),
'\nClass 3: ', signif(confusion.matrix[["byClass"]][3,1], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,1], 2)))
cat(paste0('Sensitivity Class 1: ', signif(confusion.matrix[["byClass"]][1,1], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,1], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,1], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,1], 2)))
model <- rpart(room ~ ., data=train.df, method="class")
rpart.plot(model, extra=104, fallen.leaves=T, type=4, main="1994 U.S. Census")
predictions <- predict(model,test.df,type="class")
confusion.matrix <- confusionMatrix(as.factor(test.df$room), predictions)
paste0("Decision Tree Model")
paste0("Overall Accuracy: ", signif(confusion.matrix[["overall"]][["Accuracy"]], 2))
cat(paste0('Sensitivity Class 1: ', signif(confusion.matrix[["byClass"]][1,1], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,1], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,1], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,1], 2)))
cat(paste0('Specificity Class 1: ', signif(confusion.matrix[["byClass"]][1,2], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,2], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,2], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,2], 2)))
# ", Specificity = ", signif(confusion.matrix[["byClass"]][1,2], 2), ", Balanced
# Accuracy = ", signif(confusion.matrix[["byClass"]][1,11], 2))
confusion.matrix <- confusionMatrix(as.factor(test.df$room), predictions)
View(confusion.matrix)
View(confusion.matrix)
confusion.matrix[["byClass"]]
cat(paste0('Sensitivity Class 1: ', signif(confusion.matrix[["byClass"]][1,1], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,1], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,1], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,1], 2)))
cat(paste0('Specificity Class 1: ', signif(confusion.matrix[["byClass"]][1,2], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,2], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,2], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,2], 2)))
cat(paste0('PPV Class 1: ', signif(confusion.matrix[["byClass"]][1,3], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,3], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,3], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,3], 2)))
cat(paste0('Specificity Class 1: ', signif(confusion.matrix[["byClass"]][1,11], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,11], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,11], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,11], 2)))
model <- rpart(room ~ ., data=train.df, method="class")
rpart.plot(model, extra=104, fallen.leaves=T, type=4, main="1994 U.S. Census")
predictions <- predict(model,test.df,type="class")
confusion.matrix <- confusionMatrix(as.factor(test.df$room), predictions)
paste0("Decision Tree Model")
paste0("Overall Accuracy: ", signif(confusion.matrix[["overall"]][["Accuracy"]], 2))
cat(paste0('Sensitivity Class 1: ', signif(confusion.matrix[["byClass"]][1,1], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,1], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,1], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,1], 2)))
cat(paste0('Specificity Class 1: ', signif(confusion.matrix[["byClass"]][1,2], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,2], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,2], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,2], 2)))
cat(paste0('PPV Class 1: ', signif(confusion.matrix[["byClass"]][1,3], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,3], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,3], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,3], 2)))
cat(paste0('Bal. Acc. Class 1: ', signif(confusion.matrix[["byClass"]][1,11], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,11], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,11], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,11], 2)))
model <- rpart(room ~ ., data=train.df, method="class")
rpart.plot(model, extra=104, fallen.leaves=T, type=4, main="1994 U.S. Census")
predictions <- predict(model,test.df,type="class")
confusion.matrix <- confusionMatrix(as.factor(test.df$room), predictions)
paste0("Decision Tree Model")
paste0("Overall Accuracy: ", signif(confusion.matrix[["overall"]][["Accuracy"]], 2))
cat(paste0('Sensitivity Class 1: ', signif(confusion.matrix[["byClass"]][1,1], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,1], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,1], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,1], 2)))
cat(paste0('\nSpecificity Class 1: ', signif(confusion.matrix[["byClass"]][1,2], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,2], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,2], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,2], 2)))
cat(paste0('\nPPV Class 1: ', signif(confusion.matrix[["byClass"]][1,3], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,3], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,3], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,3], 2)))
cat(paste0('\nBal. Acc. Class 1: ', signif(confusion.matrix[["byClass"]][1,11], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,11], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,11], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,11], 2)))
cat(paste0('Sensitivity Class 1: ', signif(confusion.matrix[["byClass"]][1,1], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,1], 2),
'\n\t\tClass 3: ', signif(confusion.matrix[["byClass"]][3,1], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,1], 2)))
model <- rpart(room ~ ., data=train.df, method="class")
rpart.plot(model, extra=104, fallen.leaves=T, type=4, main="1994 U.S. Census")
predictions <- predict(model,test.df,type="class")
confusion.matrix <- confusionMatrix(as.factor(test.df$room), predictions)
paste0("Decision Tree Model")
paste0("Overall Accuracy: ", signif(confusion.matrix[["overall"]][["Accuracy"]], 2))
cat(paste0('Sensitivity Class 1: ', signif(confusion.matrix[["byClass"]][1,1], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,1], 2),
'\n\t\tClass 3: ', signif(confusion.matrix[["byClass"]][3,1], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,1], 2)))
cat(paste0('\nSpecificity Class 1: ', signif(confusion.matrix[["byClass"]][1,2], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,2], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,2], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,2], 2)))
cat(paste0('\nPPV Class 1: ', signif(confusion.matrix[["byClass"]][1,3], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,3], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,3], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,3], 2)))
cat(paste0('\nBal. Acc. Class 1: ', signif(confusion.matrix[["byClass"]][1,11], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,11], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,11], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,11], 2)))
model <- keras_model_sequential() %>% layer_dense(units = 8, activation="relu", input_shape=c(3)) %>% layer_dense(units = 4, activation="softmax")
View(model)
View(model)
yes
model <- keras_model_sequential() %>%
layer_dense(units = 8, activation="relu", input_shape=c(3)) %>%
layer_dense(units = 4, activation="softmax")
c(loss, accuracy) %<-% (model %>% evaluate(as.matrix(x.test.df), y.test.df.ohe))
model <- keras_model_sequential() %>%
layer_dense(units = 8, activation="relu", input_shape=c(3)) %>%
layer_dense(units = 4, activation="softmax")
install.packages(OpenSSL)
install.packages(openssl)
install.packages("openssl")
library(keras)
library(dplyr)
library(caret)
library(rpart)
library(rpart.plot)
rm(list=ls())
# Set working directory as needed
setwd("C:\\Users\\tsout\\OneDrive\\Desktop\\cs422\\CS422-labs\\homework7")
df <- read.csv("wifi_localization.csv", header=TRUE, comment="#")
# Seed the PRNG
set.seed(1122)
df <- df[sample(nrow(df)), ] # Shuffle, as all of the data in the .csv file
# is ordered by label!
# Split the data
indx <- sample(1:nrow(df), 0.20*nrow(df))
test.df  <- df[indx, ]
train.df <- df[-indx, ]
model <- rpart(room ~ ., data=train.df, method="class")
rpart.plot(model, extra=104, fallen.leaves=T, type=4, main="1994 U.S. Census")
predictions <- predict(model,test.df,type="class")
confusion.matrix <- confusionMatrix(as.factor(test.df$room), predictions)
paste0("Decision Tree Model")
paste0("Overall Accuracy: ", signif(confusion.matrix[["overall"]][["Accuracy"]], 2))
cat(paste0('Sensitivity Class 1: ', signif(confusion.matrix[["byClass"]][1,1], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,1], 2),
'\n\t\tClass 3: ', signif(confusion.matrix[["byClass"]][3,1], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,1], 2)))
cat(paste0('\nSpecificity Class 1: ', signif(confusion.matrix[["byClass"]][1,2], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,2], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,2], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,2], 2)))
cat(paste0('\nPPV Class 1: ', signif(confusion.matrix[["byClass"]][1,3], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,3], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,3], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,3], 2)))
cat(paste0('\nBal. Acc. Class 1: ', signif(confusion.matrix[["byClass"]][1,11], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,11], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,11], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,11], 2)))
model <- keras_model_sequential() %>%
layer_dense(units = 8, activation="relu", input_shape=c(3)) %>%
layer_dense(units = 4, activation="softmax")
install.packages("keras")
model <- keras_model_sequential() %>%
layer_dense(units = 8, activation="relu", input_shape=c(3)) %>%
layer_dense(units = 4, activation="softmax")
keras_model_sequential??
??keras_model_sequential
??keras_model_sequential
options(scipen=999) # Turns scientific notation off
# Main driver for the neural network
setwd("/home/vkg/IIT/CS422/lectures/neural-networks/")
??layer_dense
model <- keras_model_sequential()
model <- keras_model_sequential()
library(keras)
library(dplyr)
library(caret)
library(rpart)
library(rpart.plot)
rm(list=ls())
# Set working directory as needed
setwd("C:\\Users\\tsout\\OneDrive\\Desktop\\cs422\\CS422-labs\\homework7")
df <- read.csv("wifi_localization.csv", header=TRUE, comment="#")
# Seed the PRNG
set.seed(1122)
df <- df[sample(nrow(df)), ] # Shuffle, as all of the data in the .csv file
# is ordered by label!
# Split the data
indx <- sample(1:nrow(df), 0.20*nrow(df))
test.df  <- df[indx, ]
train.df <- df[-indx, ]
model <- rpart(room ~ ., data=train.df, method="class")
rpart.plot(model, extra=104, fallen.leaves=T, type=4, main="1994 U.S. Census")
predictions <- predict(model,test.df,type="class")
confusion.matrix <- confusionMatrix(as.factor(test.df$room), predictions)
paste0("Decision Tree Model")
paste0("Overall Accuracy: ", signif(confusion.matrix[["overall"]][["Accuracy"]], 2))
cat(paste0('Sensitivity Class 1: ', signif(confusion.matrix[["byClass"]][1,1], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,1], 2),
'\n\t\tClass 3: ', signif(confusion.matrix[["byClass"]][3,1], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,1], 2)))
cat(paste0('\nSpecificity Class 1: ', signif(confusion.matrix[["byClass"]][1,2], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,2], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,2], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,2], 2)))
cat(paste0('\nPPV Class 1: ', signif(confusion.matrix[["byClass"]][1,3], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,3], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,3], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,3], 2)))
cat(paste0('\nBal. Acc. Class 1: ', signif(confusion.matrix[["byClass"]][1,11], 2),
' Class 2: ', signif(confusion.matrix[["byClass"]][2,11], 2),
'\n\tClass 3: ', signif(confusion.matrix[["byClass"]][3,11], 2),
' Class 4: ', signif(confusion.matrix[["byClass"]][4,11], 2)))
model <- keras_model_sequential()
install.packages("reticulate")
install.packages("reticulate")
repl_python()
model <- keras_model_sequential()
library(keras)
